module Example

import Prelude
import Plutus.V1 (PlutusData)
import qualified Plutus.V1 (Bytes, AssetClass, POSIXTime)

-- Reference a UTxO or an entity using its unique asset class.
prod Ref a = Plutus.V1.AssetClass

derive Eq (Ref a)
derive Json (Ref a)
derive PlutusData (Ref a)

-- User has a name, some friends and a status
record User = {
  name : Plutus.V1.Bytes,
  status : Status,
  friends : List (Ref User)
}

derive Eq User
derive Json User
derive PlutusData User

sum Status = Active Plutus.V1.POSIXTime | Inactive Plutus.V1.POSIXTime

derive Eq Status
derive Json Status
derive PlutusData Status

-- Message can be exchanged between users.
record Message = {
  time : Plutus.V1.POSIXTime,
  from : Ref User,
  to : Ref User,
  content : Content
}

derive Eq Message
derive Json Message
derive PlutusData Message

sum Content = Text Plutus.V1.Bytes | Emoji Emoji

derive Eq Content
derive Json Content
derive PlutusData Content

sum Emoji = ThumbsUp | ThumbsDown | NoThumbs

derive Eq Emoji
derive Json Emoji
derive PlutusData Emoji

