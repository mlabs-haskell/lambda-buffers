//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: repls/lambdabuffers-source.proto

package lambdabuffers.source;

@kotlin.jvm.JvmSynthetic
public inline fun sourceInfo(block: lambdabuffers.source.SourceInfoKt.Dsl.() -> kotlin.Unit): lambdabuffers.source.LambdabuffersSource.SourceInfo =
  lambdabuffers.source.SourceInfoKt.Dsl._create(lambdabuffers.source.LambdabuffersSource.SourceInfo.newBuilder()).apply { block() }._build()
public object SourceInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: lambdabuffers.source.LambdabuffersSource.SourceInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: lambdabuffers.source.LambdabuffersSource.SourceInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): lambdabuffers.source.LambdabuffersSource.SourceInfo = _builder.build()

    /**
     * <code>string file = 1;</code>
     */
    public var file: kotlin.String
      @JvmName("getFile")
      get() = _builder.getFile()
      @JvmName("setFile")
      set(value) {
        _builder.setFile(value)
      }
    /**
     * <code>string file = 1;</code>
     */
    public fun clearFile() {
      _builder.clearFile()
    }

    /**
     * <code>int32 column = 2;</code>
     */
    public var column: kotlin.Int
      @JvmName("getColumn")
      get() = _builder.getColumn()
      @JvmName("setColumn")
      set(value) {
        _builder.setColumn(value)
      }
    /**
     * <code>int32 column = 2;</code>
     */
    public fun clearColumn() {
      _builder.clearColumn()
    }

    /**
     * <code>int32 row = 3;</code>
     */
    public var row: kotlin.Int
      @JvmName("getRow")
      get() = _builder.getRow()
      @JvmName("setRow")
      set(value) {
        _builder.setRow(value)
      }
    /**
     * <code>int32 row = 3;</code>
     */
    public fun clearRow() {
      _builder.clearRow()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun lambdabuffers.source.LambdabuffersSource.SourceInfo.copy(block: lambdabuffers.source.SourceInfoKt.Dsl.() -> kotlin.Unit): lambdabuffers.source.LambdabuffersSource.SourceInfo =
  lambdabuffers.source.SourceInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()
