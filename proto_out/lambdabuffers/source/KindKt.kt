//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: repls/lambdabuffers-source.proto

package lambdabuffers.source;

@kotlin.jvm.JvmSynthetic
public inline fun kind(block: lambdabuffers.source.KindKt.Dsl.() -> kotlin.Unit): lambdabuffers.source.LambdabuffersSource.Kind =
  lambdabuffers.source.KindKt.Dsl._create(lambdabuffers.source.LambdabuffersSource.Kind.newBuilder()).apply { block() }._build()
public object KindKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: lambdabuffers.source.LambdabuffersSource.Kind.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: lambdabuffers.source.LambdabuffersSource.Kind.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): lambdabuffers.source.LambdabuffersSource.Kind = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class VarNameProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string VarName = 1;</code>
     * @return A list containing the varName.
     */
    public val varName: com.google.protobuf.kotlin.DslList<kotlin.String, VarNameProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getVarNameList()
      )
    /**
     * <code>repeated string VarName = 1;</code>
     * @param value The varName to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addVarName")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, VarNameProxy>.add(value: kotlin.String) {
      _builder.addVarName(value)
    }
    /**
     * <code>repeated string VarName = 1;</code>
     * @param value The varName to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignVarName")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, VarNameProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string VarName = 1;</code>
     * @param values The varName to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllVarName")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, VarNameProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllVarName(values)
    }
    /**
     * <code>repeated string VarName = 1;</code>
     * @param values The varName to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllVarName")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, VarNameProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string VarName = 1;</code>
     * @param index The index to set the value at.
     * @param value The varName to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setVarName")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, VarNameProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setVarName(index, value)
    }/**
     * <code>repeated string VarName = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearVarName")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, VarNameProxy>.clear() {
      _builder.clearVarName()
    }
    /**
     * <code>.lambdabuffers.source.SourceInfo source_info = 2;</code>
     */
    public var sourceInfo: lambdabuffers.source.LambdabuffersSource.SourceInfo
      @JvmName("getSourceInfo")
      get() = _builder.getSourceInfo()
      @JvmName("setSourceInfo")
      set(value) {
        _builder.setSourceInfo(value)
      }
    /**
     * <code>.lambdabuffers.source.SourceInfo source_info = 2;</code>
     */
    public fun clearSourceInfo() {
      _builder.clearSourceInfo()
    }
    /**
     * <code>.lambdabuffers.source.SourceInfo source_info = 2;</code>
     * @return Whether the sourceInfo field is set.
     */
    public fun hasSourceInfo(): kotlin.Boolean {
      return _builder.hasSourceInfo()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun lambdabuffers.source.LambdabuffersSource.Kind.copy(block: lambdabuffers.source.KindKt.Dsl.() -> kotlin.Unit): lambdabuffers.source.LambdabuffersSource.Kind =
  lambdabuffers.source.KindKt.Dsl._create(this.toBuilder()).apply { block() }._build()
