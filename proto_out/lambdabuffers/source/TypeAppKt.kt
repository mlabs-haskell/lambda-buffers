//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: repls/lambdabuffers-source.proto

package lambdabuffers.source;

@kotlin.jvm.JvmSynthetic
public inline fun typeApp(block: lambdabuffers.source.TypeAppKt.Dsl.() -> kotlin.Unit): lambdabuffers.source.LambdabuffersSource.TypeApp =
  lambdabuffers.source.TypeAppKt.Dsl._create(lambdabuffers.source.LambdabuffersSource.TypeApp.newBuilder()).apply { block() }._build()
public object TypeAppKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: lambdabuffers.source.LambdabuffersSource.TypeApp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: lambdabuffers.source.LambdabuffersSource.TypeApp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): lambdabuffers.source.LambdabuffersSource.TypeApp = _builder.build()

    /**
     * <code>.lambdabuffers.source.Type type_abs = 1;</code>
     */
    public var typeAbs: lambdabuffers.source.LambdabuffersSource.Type
      @JvmName("getTypeAbs")
      get() = _builder.getTypeAbs()
      @JvmName("setTypeAbs")
      set(value) {
        _builder.setTypeAbs(value)
      }
    /**
     * <code>.lambdabuffers.source.Type type_abs = 1;</code>
     */
    public fun clearTypeAbs() {
      _builder.clearTypeAbs()
    }
    /**
     * <code>.lambdabuffers.source.Type type_abs = 1;</code>
     * @return Whether the typeAbs field is set.
     */
    public fun hasTypeAbs(): kotlin.Boolean {
      return _builder.hasTypeAbs()
    }

    /**
     * <code>.lambdabuffers.source.Type type_arg = 2;</code>
     */
    public var typeArg: lambdabuffers.source.LambdabuffersSource.Type
      @JvmName("getTypeArg")
      get() = _builder.getTypeArg()
      @JvmName("setTypeArg")
      set(value) {
        _builder.setTypeArg(value)
      }
    /**
     * <code>.lambdabuffers.source.Type type_arg = 2;</code>
     */
    public fun clearTypeArg() {
      _builder.clearTypeArg()
    }
    /**
     * <code>.lambdabuffers.source.Type type_arg = 2;</code>
     * @return Whether the typeArg field is set.
     */
    public fun hasTypeArg(): kotlin.Boolean {
      return _builder.hasTypeArg()
    }

    /**
     * <code>.lambdabuffers.source.SourceInfo source_info = 3;</code>
     */
    public var sourceInfo: lambdabuffers.source.LambdabuffersSource.SourceInfo
      @JvmName("getSourceInfo")
      get() = _builder.getSourceInfo()
      @JvmName("setSourceInfo")
      set(value) {
        _builder.setSourceInfo(value)
      }
    /**
     * <code>.lambdabuffers.source.SourceInfo source_info = 3;</code>
     */
    public fun clearSourceInfo() {
      _builder.clearSourceInfo()
    }
    /**
     * <code>.lambdabuffers.source.SourceInfo source_info = 3;</code>
     * @return Whether the sourceInfo field is set.
     */
    public fun hasSourceInfo(): kotlin.Boolean {
      return _builder.hasSourceInfo()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun lambdabuffers.source.LambdabuffersSource.TypeApp.copy(block: lambdabuffers.source.TypeAppKt.Dsl.() -> kotlin.Unit): lambdabuffers.source.LambdabuffersSource.TypeApp =
  lambdabuffers.source.TypeAppKt.Dsl._create(this.toBuilder()).apply { block() }._build()
