// Run with: protoc --plugin=protoc-gen-haskell=`which proto-lens-protoc` --proto_path=repls --haskell_out=proto_out repls/lambdabuffers-compiler-service.proto
syntax = "proto3";

package lambdabuffers.compiler;

import "lambdabuffers-source.proto";
import "lambdabuffers-source-diag.proto";


service LambdaBuffersCompiler {
  rpc Compile(CompileRequest) returns (CompileResponse) {};
}

message CompileRequest {
  // Compilation takes the whole compilation closure! Every module used should be here!
  lambdabuffers.source.Source source = 1;
  // Some other compilation options
}

message CompileResponse {
  lambdabuffers.source.diag.Diagnostic diagnostics = 1;
  Compiled compiled = 2;
}

message Compiled {
  // Almost identical to Source, but with semantically valid and with backwards compat
}